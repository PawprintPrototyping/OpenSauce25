on: [push]

jobs:
  kicad_job:
    runs-on: ubuntu-latest
    name: KiCAD Fab Files
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Export production files
        id: production
        uses: sparkengineering/kicad-action@v4
        if: '!cancelled()'
        with:
          kicad_sch: schematics/PawprintTarget.kicad_sch
          sch_pdf: true # Generate PDF
          sch_bom: true # Generate BOM
          kicad_pcb: schematics/PawprintTarget.kicad_pcb
          pcb_gerbers: true # Generate Gerbers

      - id: info
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "now=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV >> $GITHUB_OUTPUT
          echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_ENV >> $GITHUB_OUTPUT

      # Upload production files only if generation succeeded
      - name: Upload production files
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && steps.production.conclusion == 'success' }}
        with:
          name: PawprintTarget-${{ steps.info.outputs.sha_short }}-${{ steps.info.outputs.now }}
          path: |
            ${{ github.workspace }}/schematics/sch.pdf
            ${{ github.workspace }}/schematics/bom.csv
            ${{ github.workspace }}/schematics/gbr.zip

      - name: Run KiCad ERC
        id: erc
        uses: rechner/kicad-action@main
        if: '!cancelled()'
        with:
          kicad_sch: schematics/PawprintTarget.kicad_sch
          sch_erc: true

      - name: Run KiCad DRC
        id: drc
        uses: rechner/kicad-action@main
        if: '!cancelled()'
        with:
          kicad_pcb: schematics/PawprintTarget.kicad_pcb
          pcb_drc: true

      - name: Annotate
        if: always()
        env:
          SHA_SHORT: ${{ steps.info.outputs.sha_short }}
          NOW: ${{ steps.info.outputs.now }}
          ERC_VIOLATION: ${{ steps.erc.outputs.erc_violation }}
          ERC_MESSAGE: ${{ steps.erc.outputs.erc_message }}
          DRC_VIOLATION: ${{ steps.drc.outputs.drc_violation }}
          DRC_MESSAGE: ${{ steps.drc.outputs.drc_message }}
        run: |
          echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "FIY, the short sha is \`$SHA_SHORT\`, and the timestamp is \`$NOW\`" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Summary |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | ------ | ------- |" >> $GITHUB_STEP_SUMMARY
          if [[ $ERC_VIOLATION -eq 0 ]]; then
            echo "| ERC | ✅ Pass | |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| ERC | ❌ Fail | |" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ $DRC_VIOLATION -eq 0 ]]; then
            echo "| DRC | ✅ Pass | |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| DRC | ❌ Fail | |" >> $GITHUB_STEP_SUMMARY
          fi


      # Upload ERC report only if ERC failed
      - name: Upload ERC report
        uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.erc.conclusion == 'failure' }}
        with:
          name: erc-${{ steps.info.outputs.sha_short }}-${{ steps.info.outputs.now }}.rpt
          path: ${{ github.workspace }}/schematics/erc.rpt

      # Upload DRC report only if DRC failed
      - name: Upload DRC report
        uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.drc.conclusion == 'failure' }}
        with:
          name: drc-${{ steps.info.outputs.sha_short }}-${{ steps.info.outputs.now }}.rpt
          path: ${{ github.workspace }}/schematics/drc.rpt
